{
	"info": {
		"_postman_id": "479746bd-bcd6-4b27-b179-c05c913248e0",
		"name": "TestAPIGITHUBACTION",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9386974"
	},
	"item": [
		{
			"name": "https://fresh-linkedin-profile-data.p.rapidapi.com/get-profile-pdf-cv?linkedin_url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 7000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(7000);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response matches the expected schema for a LinkedIn profile PDF CV\", function () {\r",
							"    const responseData = pm.response.json().data; // Accessing the nested data object\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"\r",
							"    // Checking the existence of expected keys\r",
							"    pm.expect(responseData).to.have.all.keys('base64encoded_pdf'); // Expected keys based on actual response\r",
							"\r",
							"    // Validating the base64encoded_pdf field\r",
							"    pm.expect(responseData.base64encoded_pdf).to.be.a('string').and.to.have.lengthOf.at.least(1, \"PDF data should not be empty\");\r",
							"});\r",
							"\r",
							"// The LinkedIn URL is not present in the response, so removing the corresponding test\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-rapidapi-host",
						"value": "fresh-linkedin-profile-data.p.rapidapi.com"
					},
					{
						"key": "x-rapidapi-key",
						"value": "10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36"
					}
				],
				"url": {
					"raw": "https://fresh-linkedin-profile-data.p.rapidapi.com/get-profile-pdf-cv?linkedin_url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F",
					"protocol": "https",
					"host": [
						"fresh-linkedin-profile-data",
						"p",
						"rapidapi",
						"com"
					],
					"path": [
						"get-profile-pdf-cv"
					],
					"query": [
						{
							"key": "linkedin_url",
							"value": "https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F"
						}
					]
				},
				"description": "Generated from cURL: curl --request GET \\\r\n\t--url 'https://fresh-linkedin-profile-data.p.rapidapi.com/get-profile-pdf-cv?linkedin_url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F' \\\r\n\t--header 'x-rapidapi-host: fresh-linkedin-profile-data.p.rapidapi.com' \\\r\n\t--header 'x-rapidapi-key: 10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36'"
			},
			"response": []
		},
		{
			"name": "https://fresh-linkedin-profile-data.p.rapidapi.com/google-full-profiles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 7000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(7000);\r",
							"});\r",
							"\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.all.keys('data', 'message');\r",
							"\r",
							"    pm.expect(responseData.data).to.be.an('array');\r",
							"    responseData.data.forEach(profile => {\r",
							"        pm.expect(profile).to.be.an('object').that.includes.keys('first_name', 'job_title', 'company', 'location', 'email');\r",
							"        pm.expect(profile.first_name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"First name should not be empty\");\r",
							"        pm.expect(profile.job_title).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Job title should not be empty\");\r",
							"        pm.expect(profile.company).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Company name should not be empty\");\r",
							"        pm.expect(profile.location).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Location should not be empty\");\r",
							"        pm.expect(profile.email).to.be.a('string');\r",
							"    });\r",
							"\r",
							"    pm.expect(responseData.message).to.be.a('string');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "x-rapidapi-host",
						"value": "fresh-linkedin-profile-data.p.rapidapi.com"
					},
					{
						"key": "x-rapidapi-key",
						"value": "10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Anthony James\",\"company_name\":\"\",\"job_title\":\"CEO\",\"location\":\"US\",\"keywords\":\"\",\"limit\":5}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fresh-linkedin-profile-data.p.rapidapi.com/google-full-profiles",
					"protocol": "https",
					"host": [
						"fresh-linkedin-profile-data",
						"p",
						"rapidapi",
						"com"
					],
					"path": [
						"google-full-profiles"
					]
				},
				"description": "Generated from cURL: curl --request POST \\\r\n\t--url https://fresh-linkedin-profile-data.p.rapidapi.com/google-full-profiles \\\r\n\t--header 'Content-Type: application/json' \\\r\n\t--header 'x-rapidapi-host: fresh-linkedin-profile-data.p.rapidapi.com' \\\r\n\t--header 'x-rapidapi-key: 10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36' \\\r\n\t--data '{\"name\":\"Anthony James\",\"company_name\":\"\",\"job_title\":\"CEO\",\"location\":\"US\",\"keywords\":\"\",\"limit\":5}'"
			},
			"response": []
		}
	]
}