{
	"info": {
		"_postman_id": "479746bd-bcd6-4b27-b179-c05c913248e0",
		"name": "TestAPIGITHUBACTION",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9386974"
	},
	"item": [
		{
			"name": "https://fresh-linkedin-profile-data.p.rapidapi.com/get-profile-pdf-cv?linkedin_url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response matches the expected schema for a LinkedIn profile PDF CV\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    \r",
							"    pm.expect(responseData).to.have.all.keys('name', 'email', 'age', 'skills', 'experience', 'education', 'summary');\r",
							"\r",
							"    pm.expect(responseData.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
							"    pm.expect(responseData.email).to.be.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email format is invalid\");\r",
							"    pm.expect(responseData.age).to.be.a('number').and.to.be.above(0, \"Age should be a positive number\");\r",
							"\r",
							"    pm.expect(responseData.skills).to.be.an('array').that.is.not.empty;\r",
							"    responseData.skills.forEach(skill => {\r",
							"        pm.expect(skill).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Skill should not be empty\");\r",
							"    });\r",
							"\r",
							"    pm.expect(responseData.experience).to.be.an('array');\r",
							"    responseData.experience.forEach(exp => {\r",
							"        pm.expect(exp).to.have.all.keys('title', 'company', 'duration');\r",
							"        pm.expect(exp.title).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Experience title should not be empty\");\r",
							"        pm.expect(exp.company).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Company name should not be empty\");\r",
							"        pm.expect(exp.duration).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Duration should not be empty\");\r",
							"    });\r",
							"\r",
							"    pm.expect(responseData.education).to.be.an('array');\r",
							"    responseData.education.forEach(edu => {\r",
							"        pm.expect(edu).to.have.all.keys('degree', 'institution', 'year');\r",
							"        pm.expect(edu.degree).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Degree should not be empty\");\r",
							"        pm.expect(edu.institution).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Institution name should not be empty\");\r",
							"        pm.expect(edu.year).to.be.a('number').and.to.be.above(1900, \"Year should be a valid year\");\r",
							"    });\r",
							"\r",
							"    pm.expect(responseData.summary).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Summary should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"LinkedIn URL in the request matches the profile data in the response\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    const requestUrl = pm.request.url.toString();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.linkedin_url).to.exist;\r",
							"    pm.expect(responseData.linkedin_url).to.equal(requestUrl);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content type is valid PDF format\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/pdf');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-rapidapi-host",
						"value": "fresh-linkedin-profile-data.p.rapidapi.com"
					},
					{
						"key": "x-rapidapi-key",
						"value": "10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36"
					}
				],
				"url": {
					"raw": "https://fresh-linkedin-profile-data.p.rapidapi.com/get-profile-pdf-cv?linkedin_url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F",
					"protocol": "https",
					"host": [
						"fresh-linkedin-profile-data",
						"p",
						"rapidapi",
						"com"
					],
					"path": [
						"get-profile-pdf-cv"
					],
					"query": [
						{
							"key": "linkedin_url",
							"value": "https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F"
						}
					]
				},
				"description": "Generated from cURL: curl --request GET \\\r\n\t--url 'https://fresh-linkedin-profile-data.p.rapidapi.com/get-profile-pdf-cv?linkedin_url=https%3A%2F%2Fwww.linkedin.com%2Fin%2Fwilliamhgates%2F' \\\r\n\t--header 'x-rapidapi-host: fresh-linkedin-profile-data.p.rapidapi.com' \\\r\n\t--header 'x-rapidapi-key: 10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36'"
			},
			"response": []
		},
		{
			"name": "https://fresh-linkedin-profile-data.p.rapidapi.com/google-full-profiles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response matches the expected schema\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.all.keys('profiles', 'status', 'message');\r",
							"\r",
							"    pm.expect(responseData.profiles).to.be.an('array');\r",
							"    responseData.profiles.forEach(profile => {\r",
							"        pm.expect(profile).to.be.an('object').that.includes.keys('name', 'job_title', 'company_name', 'location', 'keywords');\r",
							"        pm.expect(profile.name).to.be.a('string');\r",
							"        pm.expect(profile.job_title).to.be.a('string');\r",
							"        pm.expect(profile.company_name).to.be.a('string');\r",
							"        pm.expect(profile.location).to.be.a('string');\r",
							"        pm.expect(profile.keywords).to.be.a('string');\r",
							"    });\r",
							"\r",
							"    pm.expect(responseData.status).to.be.a('string');\r",
							"    pm.expect(responseData.message).to.be.a('string');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Name must be a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.name).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"The 'limit' field must be a positive integer\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.limit).to.exist.and.to.be.a('number').and.to.be.above(0, \"Limit should be a positive integer\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "x-rapidapi-host",
						"value": "fresh-linkedin-profile-data.p.rapidapi.com"
					},
					{
						"key": "x-rapidapi-key",
						"value": "10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Anthony James\",\"company_name\":\"\",\"job_title\":\"CEO\",\"location\":\"US\",\"keywords\":\"\",\"limit\":5}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fresh-linkedin-profile-data.p.rapidapi.com/google-full-profiles",
					"protocol": "https",
					"host": [
						"fresh-linkedin-profile-data",
						"p",
						"rapidapi",
						"com"
					],
					"path": [
						"google-full-profiles"
					]
				},
				"description": "Generated from cURL: curl --request POST \\\r\n\t--url https://fresh-linkedin-profile-data.p.rapidapi.com/google-full-profiles \\\r\n\t--header 'Content-Type: application/json' \\\r\n\t--header 'x-rapidapi-host: fresh-linkedin-profile-data.p.rapidapi.com' \\\r\n\t--header 'x-rapidapi-key: 10283376fcmsh2424bd4931d44efp18f6f3jsn28c79be91c36' \\\r\n\t--data '{\"name\":\"Anthony James\",\"company_name\":\"\",\"job_title\":\"CEO\",\"location\":\"US\",\"keywords\":\"\",\"limit\":5}'"
			},
			"response": []
		}
	]
}